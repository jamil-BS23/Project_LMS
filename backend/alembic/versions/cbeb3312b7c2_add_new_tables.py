"""Add new tables

Revision ID: cbeb3312b7c2
Revises: aa7c92e16c0d
Create Date: 2025-10-20 20:27:48.094638

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cbeb3312b7c2'
down_revision: Union[str, None] = 'aa7c92e16c0d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('books', sa.Column('book_category', sa.String(), nullable=False))
    op.add_column('books', sa.Column('book_description', sa.Text(), nullable=True))
    op.add_column('books', sa.Column('available_copies', sa.Integer(), nullable=True))
    op.add_column('books', sa.Column('book_availabity', sa.Boolean(), nullable=True))
    op.add_column('books', sa.Column('book_image', sa.String(), nullable=True))
    op.alter_column('books', 'book_rating',
               existing_type=sa.NUMERIC(precision=2, scale=1),
               type_=sa.Float(),
               existing_nullable=True)
    op.create_index(op.f('ix_books_book_author'), 'books', ['book_author'], unique=False)
    op.create_index(op.f('ix_books_book_category'), 'books', ['book_category'], unique=False)
    op.create_index(op.f('ix_books_book_id'), 'books', ['book_id'], unique=False)
    op.create_index(op.f('ix_books_book_title'), 'books', ['book_title'], unique=False)
    op.drop_constraint('books_book_category_id_fkey', 'books', type_='foreignkey')
    op.drop_column('books', 'book_category_id')
    op.drop_column('books', 'book_review_count')
    op.drop_column('books', 'book_count')
    op.drop_column('books', 'book_availability')
    op.drop_column('books', 'book_details')
    op.drop_column('books', 'book_photo')
    op.add_column('donation_books', sa.Column('donation_book_id', sa.Integer(), nullable=False))
    op.add_column('donation_books', sa.Column('donor_name', sa.String(), nullable=False))
    op.add_column('donation_books', sa.Column('book_category', sa.String(), nullable=False))
    op.add_column('donation_books', sa.Column('book_description', sa.Text(), nullable=True))
    op.add_column('donation_books', sa.Column('BS_email', sa.String(), nullable=False))
    op.add_column('donation_books', sa.Column('book_image', sa.String(), nullable=True))
    op.add_column('donation_books', sa.Column('donation_status', sa.String(), nullable=True))
    op.add_column('donation_books', sa.Column('book_copies', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_donation_books_BS_ID'), 'donation_books', ['BS_ID'], unique=False)
    op.create_index(op.f('ix_donation_books_BS_email'), 'donation_books', ['BS_email'], unique=False)
    op.create_index(op.f('ix_donation_books_book_author'), 'donation_books', ['book_author'], unique=False)
    op.create_index(op.f('ix_donation_books_book_category'), 'donation_books', ['book_category'], unique=False)
    op.create_index(op.f('ix_donation_books_book_title'), 'donation_books', ['book_title'], unique=False)
    op.create_index(op.f('ix_donation_books_donation_book_id'), 'donation_books', ['donation_book_id'], unique=False)
    op.create_index(op.f('ix_donation_books_donor_name'), 'donation_books', ['donor_name'], unique=False)
    op.drop_constraint('donation_books_category_id_fkey', 'donation_books', type_='foreignkey')
    op.drop_column('donation_books', 'created_at')
    op.drop_column('donation_books', 'BS_mail')
    op.drop_column('donation_books', 'category_id')
    op.drop_column('donation_books', 'd_book_id')
    op.drop_column('donation_books', 'category_title')
    op.drop_column('donation_books', 'book_count')
    op.drop_column('donation_books', 'book_approve')
    op.drop_column('donation_books', 'book_photo')
    op.drop_column('donation_books', 'book_detail')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('donation_books', sa.Column('book_detail', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('donation_books', sa.Column('book_photo', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('donation_books', sa.Column('book_approve', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('donation_books', sa.Column('book_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('donation_books', sa.Column('category_title', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
    op.add_column('donation_books', sa.Column('d_book_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('donation_books', sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('donation_books', sa.Column('BS_mail', sa.VARCHAR(length=150), autoincrement=False, nullable=False))
    op.add_column('donation_books', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.create_foreign_key('donation_books_category_id_fkey', 'donation_books', 'categories', ['category_id'], ['category_id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_donation_books_donor_name'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_donation_book_id'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_book_title'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_book_category'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_book_author'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_BS_email'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_BS_ID'), table_name='donation_books')
    op.drop_column('donation_books', 'book_copies')
    op.drop_column('donation_books', 'donation_status')
    op.drop_column('donation_books', 'book_image')
    op.drop_column('donation_books', 'BS_email')
    op.drop_column('donation_books', 'book_description')
    op.drop_column('donation_books', 'book_category')
    op.drop_column('donation_books', 'donor_name')
    op.drop_column('donation_books', 'donation_book_id')
    op.add_column('books', sa.Column('book_photo', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('books', sa.Column('book_details', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('books', sa.Column('book_availability', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('books', sa.Column('book_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('books', sa.Column('book_review_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('books', sa.Column('book_category_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('books_book_category_id_fkey', 'books', 'categories', ['book_category_id'], ['category_id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_books_book_title'), table_name='books')
    op.drop_index(op.f('ix_books_book_id'), table_name='books')
    op.drop_index(op.f('ix_books_book_category'), table_name='books')
    op.drop_index(op.f('ix_books_book_author'), table_name='books')
    op.alter_column('books', 'book_rating',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=2, scale=1),
               existing_nullable=True)
    op.drop_column('books', 'book_image')
    op.drop_column('books', 'book_availabity')
    op.drop_column('books', 'available_copies')
    op.drop_column('books', 'book_description')
    op.drop_column('books', 'book_category')
    # ### end Alembic commands ###
