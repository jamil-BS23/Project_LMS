"""create users table

Revision ID: 8b8f5e69e2e7
Revises: ea562f4ebc14
Create Date: 2025-10-24 18:54:39.533395

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8b8f5e69e2e7'
down_revision: Union[str, None] = 'ea562f4ebc14'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('category_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category_title', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('category_id'),
    sa.UniqueConstraint('category_title')
    )
    op.create_table('donation_books',
    sa.Column('donation_book_id', sa.Integer(), nullable=False),
    sa.Column('book_title', sa.String(), nullable=False),
    sa.Column('book_author', sa.String(), nullable=False),
    sa.Column('donor_name', sa.String(), nullable=False),
    sa.Column('book_category', sa.String(), nullable=False),
    sa.Column('book_description', sa.Text(), nullable=True),
    sa.Column('BS_email', sa.String(), nullable=False),
    sa.Column('BS_ID', sa.String(), nullable=False),
    sa.Column('book_image', sa.String(), nullable=True),
    sa.Column('book_audio', sa.String(), nullable=True),
    sa.Column('book_pdf', sa.String(), nullable=True),
    sa.Column('donation_status', sa.String(), nullable=True),
    sa.Column('book_copies', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('donation_book_id')
    )
    op.create_index(op.f('ix_donation_books_BS_ID'), 'donation_books', ['BS_ID'], unique=False)
    op.create_index(op.f('ix_donation_books_BS_email'), 'donation_books', ['BS_email'], unique=False)
    op.create_index(op.f('ix_donation_books_book_author'), 'donation_books', ['book_author'], unique=False)
    op.create_index(op.f('ix_donation_books_book_category'), 'donation_books', ['book_category'], unique=False)
    op.create_index(op.f('ix_donation_books_book_title'), 'donation_books', ['book_title'], unique=False)
    op.create_index(op.f('ix_donation_books_donation_book_id'), 'donation_books', ['donation_book_id'], unique=False)
    op.create_index(op.f('ix_donation_books_donor_name'), 'donation_books', ['donor_name'], unique=False)
    op.create_table('settings',
    sa.Column('setting_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('borrow_day_limit', sa.Integer(), nullable=False),
    sa.Column('borrow_day_extension_limit', sa.Integer(), nullable=False),
    sa.Column('borrow_max_limit', sa.Integer(), nullable=False),
    sa.Column('booking_duration', sa.Integer(), nullable=False),
    sa.Column('booking_days_limit', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('setting_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.String(length=50), nullable=False),
    sa.Column('user_name', sa.String(length=100), nullable=False),
    sa.Column('user_email', sa.String(length=150), nullable=False),
    sa.Column('user_photo', sa.String(), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_user_email'), 'users', ['user_email'], unique=True)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('book_reviews',
    sa.Column('review_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('review_text', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.book_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('review_id')
    )
    op.create_table('borrow_records',
    sa.Column('borrow_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(length=50), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('borrow_date', sa.Date(), nullable=True),
    sa.Column('return_date', sa.Date(), nullable=True),
    sa.Column('returned_at', sa.Date(), nullable=True),
    sa.Column('borrow_status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.book_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('borrow_id')
    )
    op.create_table('user_rating',
    sa.Column('rating_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.DECIMAL(precision=2, scale=1), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.book_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('rating_id'),
    sa.UniqueConstraint('user_id', 'book_id', name='uix_user_book')
    )
    op.drop_table('borrows')
    op.drop_table('borrow')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('borrow',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('borrow_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('return_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=False),
    sa.Column('returned_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='borrow_pkey')
    )
    op.create_table('borrows',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('borrow_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('due_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('return_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('REQUESTED', 'ACCEPTED', 'ACTIVE', 'RETURNED', 'OVERDUE', 'REJECTED', name='borrowstatus'), autoincrement=False, nullable=False),
    sa.Column('extension_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='borrows_pkey')
    )
    op.drop_table('user_rating')
    op.drop_table('borrow_records')
    op.drop_table('book_reviews')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_user_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('settings')
    op.drop_index(op.f('ix_donation_books_donor_name'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_donation_book_id'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_book_title'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_book_category'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_book_author'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_BS_email'), table_name='donation_books')
    op.drop_index(op.f('ix_donation_books_BS_ID'), table_name='donation_books')
    op.drop_table('donation_books')
    op.drop_table('categories')
    # ### end Alembic commands ###
